@model LexiconLMS.Models.UsersViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>

<p>
    @*@Html.ActionLink("Create New User", "Create")*@
</p>

@using (Html.BeginForm("Users", "Teacher", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search"/>
    </p>
}

<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.ActionLink("Name", "Users", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Email
        </th>
        <th>
            PhoneNumber
        </th>
        <th>
            @Html.ActionLink("Course name", "Users", new { sortOrder = ViewBag.CourseNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Role name", "Users", new { sortOrder = ViewBag.RolesNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    <tr>

    @foreach (var user in Model.Users)
    {
    <tr class="datarow" onclick="location.href = '@(Url.Action("ApplicationUserDetails", "Account", new {userId = user.Id}))'">
        <td>
            @Html.DisplayFor(modelItem => user.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => user.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => user.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => user.Course.Name)
        </td>
        <td>
            @string.Join(", ", Model.Roles.Where(r => r.Users.Any(u => u.UserId == user.Id)).Select(r => r.Name))
        </td>
    </tr>
    }

</table>
<br/>

    @Html.PagedListPager(Model.Users, page => Url.Action("Users",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
