@using PagedList.Mvc
@model PagedList.IPagedList<LexiconLMS.Models.ApplicationUser>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Users";
}

<h2>Users</h2>

<p>
    @*@Html.ActionLink("Create New User", "Create")*@
</p>

@using (Html.BeginForm("Users", "Users", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search"/>
    </p>
}

<table class="table table-striped table-hover">
    <tr>
    <th>
        @Html.ActionLink("Name", "Users", new {sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
    </th>
    <th>
        Email
    </th>
    <th>
        PhoneNumber
    </th>
    <th>
        @Html.ActionLink("Course Name", "Users", new {sortOrder = ViewBag.CourseNameSortParm, currentFilter = ViewBag.CurrentFilter})
    </th>

    @*<th>
            @Html.DisplayNameFor(model => model.Roles)
        </th>*@
    <tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course.Name)
            </td>
            @*@<td>
                @foreach (var role in item.Roles)
                {
                    @Html.DisplayFor(modelItem => role)
                }
            </td>*@
            @*<td>@Html.ActionLink("User details", "Users", "Users", new { id = item.Id }, null)</td>   *@
        </tr>
    }

</table>
<br/>

@Html.PagedListPager(Model, page => Url.Action("Users",
    new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))