@model LexiconLMS.Models.RegisterDocumentModel

@{
    ViewBag.Title = "Add a Document";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("AddDocument", "Documents", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Add a Document</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(m => m.DocumentType, "Doc Type", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.DocumentType, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.DocumentType, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.CourseId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CourseId, "", new {@class = "text-danger"})
            </div>
        </div>
        @*</div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.CourseId)
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group hidden">
            @Html.LabelFor(model => model.ModuleId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ModuleId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.ActivityId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ActivityId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @if (Model.CourseId > 0)
    {
        @Html.ActionLink("Back", "CourseDetails/" + Model.CourseId, "Courses")
    }


    @if (Model.ModuleId > 0)
    {
        @Html.ActionLink("Back", "ModuleDetails/" + Model.ModuleId, "Modules")
    }


    @if (Model.ActivityId > 0)
    {
        @Html.ActionLink("Back", "ActivityDetails/" + Model.ActivityId, "Activities")
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}