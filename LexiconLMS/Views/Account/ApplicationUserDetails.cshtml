@using LexiconLMS.Migrations
@model LexiconLMS.Models.ApplicationUser

@{
    ViewBag.Title = "User";
}

<h2>User details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Course.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Course.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmailConfirmed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmailConfirmed)
        </dd>

        @*<dt>
                @Html.DisplayNameFor(model => model.PasswordHash)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PasswordHash)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SecurityStamp)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SecurityStamp)
                </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumberConfirmed)
        </dd>

        @*<dt>
                @Html.DisplayNameFor(model => model.TwoFactorEnabled)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TwoFactorEnabled)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LockoutEndDateUtc)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LockoutEndDateUtc)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LockoutEnabled)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LockoutEnabled)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AccessFailedCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AccessFailedCount)
                </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>
    </dl>
    <p>
        @Html.ActionLink("Al Users", "Users", "Teacher") |
        @Html.ActionLink("Edit User", "EditApplicationUser", "Account", new { userId = Model.Id }, null) |
        @Html.ActionLink("Delete User", "DeleteApplicationUser", "Account", new { userId = Model.Id }, null)
    </p>

    @if (Model.Course != null)
    {
    <hr />
        <h2>Course overview:</h2>

        foreach (var module in Model.Course.Modules)
        {
            <div style="padding-left: 10px;"> <b>Module: </b> @Html.ActionLink(module.Name, "ModuleDetails/" + module.ModuleId, "Modules", null, null) </div>


            foreach (var activity in module.Activities)
            {
                <div style="padding-left: 30px;"> <b>Activity: </b>@Html.ActionLink(activity.Description, "ActivityDetails/" + module.ModuleId, "Activities", null, null)</div>

                foreach (var document in activity.Documents)
                {

                    if (document.DocumentType == LexiconLMS.Models.DocumentType.Övningsuppgift)
                    {
                        <div style="padding-left: 50px;">

                            <b>Document: </b>

                            <a class="viewc" href="@Url.Action("OpenFile", "Documents", new { @fileName = document.Name })">
                                <img width="16" height="16" border="0" src="~/Images/view.jpg" class="viewc">
                            </a>
                            @Html.DisplayFor(modelItem => document.Name)
                        </div>
                    }
                }
            }
        }
    }
</div>